version: '3.8'

services:
  backend:
    build: ./backend
    container_name: minhaapp-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      # Para desenvolvimento, montar o código local no container pode ser útil.
      # Certifique-se que o caminho corresponde à estrutura do Dockerfile.
      - ./backend/app:/app/app
    environment:
      DATABASE_URL: ${BACKEND_DATABASE_URL}
      SECRET_KEY: ${BACKEND_SECRET_KEY}
      ALGORITHM: ${BACKEND_ALGORITHM}
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build: ./frontend
    container_name: minhaapp-frontend
    restart: unless-stopped
    ports:
      - "3000:80" # Porta do Host 3000 mapeada para porta 80 do container Nginx
    depends_on:
      - backend
    networks:
      - app-network

  db: # Serviço de banco de dados PostgreSQL (opcional, mas recomendado)
    image: postgres:13-alpine
    container_name: minhaapp-db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    # Descomente para expor a porta do DB no host (para acesso direto se necessário)
    # ports:
    #   - "5432:5432"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: # Persiste os dados do banco de dados